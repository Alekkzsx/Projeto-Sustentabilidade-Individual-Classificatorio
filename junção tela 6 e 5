import json
import os
from datetime import datetime

# Configura√ß√£o do arquivo JSON
ARQUIVO_GASTOS = 'gastos_usuarios.json'

def carregar_historico():
    """Carrega os dados do arquivo JSON"""
    if not os.path.exists(ARQUIVO_GASTOS):
        print(f"‚ö†Ô∏è O arquivo {ARQUIVO_GASTOS} n√£o foi encontrado. Criando um novo arquivo...")
        return {"usuarios": {}}

    try:
        with open(ARQUIVO_GASTOS, 'r') as f:
            return json.load(f)
    except json.JSONDecodeError:
        print("‚ö†Ô∏è O arquivo JSON est√° corrompido. Criando um novo arquivo...")
        return {"usuarios": {}}
    except Exception as e:
        print(f"Erro ao carregar o arquivo: {e}")
        return {"usuarios": {}}

def exibir_historico_categoria(usuario, tipo):
    """Exibe o hist√≥rico de uma categoria espec√≠fica"""
    dados = carregar_historico()
    usuario = usuario.lower()
    
    print("\n" + "‚ïê" * 40)
    print(f" HIST√ìRICO DE {tipo.upper()} ".center(40, '‚îÄ'))
    print("‚ïê" * 40)
    
    if usuario not in dados['usuarios']:
        print("\nüîç Usu√°rio n√£o encontrado")
        print("‚ïê" * 40)
        return
    
    registros = dados['usuarios'][usuario]
    
    if not registros:
        print("\nüì≠ Nenhum registro encontrado para este usu√°rio")
        print("‚ïê" * 40)
        return
    
    print(f"\nUsu√°rio: {usuario.capitalize()}")
    print(f"Total de registros: {len(registros)}")
    print("‚ïê" * 40)

    # Exibindo os registros conforme o tipo solicitado
    for idx, registro in enumerate(registros, 1):
        print(f"\nüìÖ Registro #{idx} - {registro.get('data_hora', 'Sem data')}")
        
        if tipo == 'agua':
            print(f"üíß √Ågua: {registro['agua']['valor']} litros")
            print(f"Classifica√ß√£o: {registro['agua']['classificacao']}")
        elif tipo == 'energia':
            print(f"‚ö° Energia: {registro['energia']['valor']} kWh")
            print(f"Classifica√ß√£o: {registro['energia']['classificacao']}")
        elif tipo == 'residuos':
            print(f"‚ôªÔ∏è Res√≠duos: {registro['residuos']['valor']}%")
            print(f"Classifica√ß√£o: {registro['residuos']['classificacao']}")
        elif tipo == 'transporte':
            print(f"üöå Transportes:")
            for transporte in registro['transportes']:
                print(f"  Meio: {transporte['meio']} | Viagens: {transporte['viagens']} | Classifica√ß√£o: {transporte['classificacao']}")
        
    print("‚ïê" * 40)

def exibir_todas_categorias():
    """Exibe a vis√£o combinada de todas as categorias"""
    print("\n" + "‚ïê" * 40)
    print(" VISUALIZA√á√ÉO INTEGRADA ".center(40, '‚îÄ'))
    print("‚ïê" * 40)
    
    dados = carregar_historico()
    print("\nCarregando dados combinados...")
    
    for usuario, registros in dados['usuarios'].items():
        print(f"\nUsu√°rio: {usuario.capitalize()}")
        print("Total de registros: ", len(registros))
        print("‚ïê" * 40)

        for idx, registro in enumerate(registros, 1):
            print(f"\nüìÖ Registro #{idx} - {registro.get('data_hora', 'Sem data')}")
            print(f"üíß √Ågua: {registro['agua']['valor']} litros - {registro['agua']['classificacao']}")
            print(f"‚ö° Energia: {registro['energia']['valor']} kWh - {registro['energia']['classificacao']}")
            print(f"‚ôªÔ∏è Res√≠duos: {registro['residuos']['valor']}% - {registro['residuos']['classificacao']}")
            print(f"üöå Transportes: ")
            for transporte in registro['transportes']:
                print(f"  Meio: {transporte['meio']} | Viagens: {transporte['viagens']} | Classifica√ß√£o: {transporte['classificacao']}")
            print("‚ïê" * 40)
    
    print("‚ïê" * 40)

def mostrar_menu():
    """Exibe o menu principal para escolha de hist√≥ricos"""
    print("\n" + "‚ïê" * 40)
    print(f"{' MENU DE HIST√ìRICOS ':=^40}")
    print("‚ïê" * 40)
    print(f"{'1. Hist√≥rico de √Ågua':<38} ")
    print(f"{'2. Hist√≥rico de Energia':<38} ")
    print(f"{'3. Hist√≥rico de Transporte':<38} ")
    print(f"{'4. Hist√≥rico de Res√≠duos':<38} ") 
    print(f"{'5. Todas as Categorias':<38} ")  # Nova op√ß√£o
    print(f"{'6. Sair do Sistema':<38} ")      # Op√ß√£o de sa√≠da ajustada
    print("‚ïê" * 40)

def main():
    """Fun√ß√£o principal com nova op√ß√£o integrada"""
    usuario = input("Digite o nome do usu√°rio para acessar o hist√≥rico: ").strip()

    while True:
        mostrar_menu()
        opcao = input("\nEscolha o hist√≥rico desejado (1-6): ").strip()  # Ajustado para 6 op√ß√µes
        
        if opcao == "1":
            exibir_historico_categoria(usuario, 'agua')
        elif opcao == "2":
            exibir_historico_categoria(usuario, 'energia')
        elif opcao == "3":
            exibir_historico_categoria(usuario, 'transporte')
        elif opcao == "4":
            exibir_historico_categoria(usuario, 'residuos')
        elif opcao == "5":  # Nova op√ß√£o
            exibir_todas_categorias()
        elif opcao == "6":
            print("\n" + "‚ïê" * 40)
            print(f"{' OBRIGADO POR USAR O SISTEMA! ':=^40}")
            print("‚ïê" * 40 + "\n")
            break
        else:
            print("\n‚ö† Op√ß√£o inv√°lida! Use valores de 1 a 6.") 
            input("Pressione Enter para tentar novamente...")

if __name__ == "__main__":
    main()
