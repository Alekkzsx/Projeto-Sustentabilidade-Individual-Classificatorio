import datetime
import os
import json

def limpar_tela():
    os.system('cls' if os.name == 'nt' else 'clear')

def salvar_dados_json(usuario, agua, energia, residuos, transportes, classificacoes):
    """
    Salva os dados do usu√°rio em um arquivo JSON chamado 'gastos_usuarios.json'.
    Se o arquivo n√£o existir, ele ser√° criado.
    """
    arquivo_json = "gastos_usuarios.json"
    
    # Cria o arquivo JSON se n√£o existir
    if not os.path.exists(arquivo_json):
        with open(arquivo_json, 'w') as f:
            json.dump({}, f)
    
    # Carrega os dados existentes do arquivo JSON
    with open(arquivo_json, 'r') as f:
        dados = json.load(f)
    
    # Adiciona o usu√°rio se n√£o estiver no arquivo
    if usuario not in dados:
        dados[usuario] = []
    
    # Adiciona o novo registro com data/hora
    registro = {
        "data_hora": datetime.datetime.now().strftime("%d/%m/%Y %H:%M"),
        "agua": {"valor": agua, "classificacao": classificacoes["agua"]},
        "energia": {"valor": energia, "classificacao": classificacoes["energia"]},
        "residuos": {"valor": residuos, "classificacao": classificacoes["residuos"]},
        "transportes": [
            {"meio": t[0], "viagens": t[1], "classificacao": t[2]} for t in transportes
        ]
    }
    dados[usuario].append(registro)
    
    # Salva os dados atualizados no arquivo JSON
    with open(arquivo_json, 'w') as f:
        json.dump(dados, f, indent=4)

def main(usuario_logado):
    while True:
        limpar_tela()
        # Exibe uma mensagem de boas-vindas com o nome do usu√°rio
        print(f"\nBem-vindo(a), {usuario_logado}!")
        print("\n‚ïî" + "‚ïê" * 78 + "‚ïó")
        print("‚ïë" + " BEM-VINDO AO SISTEMA DE SUSTENTABILIDADE ".center(78, '‚îÄ') + "‚ïë")
        print("‚ï†" + "‚ïê" * 78 + "‚ï£")
        print("‚ïë" + "O QUE VOC√ä GOSTARIA DE FAZER HOJE?".center(78) + "‚ïë")
        print("‚ïö" + "‚ïê" * 78 + "‚ïù")

        print("\t\t\t    [1] Registrar novos dados")
        print("\t\t\t    [2] Acessar Hist√≥rico")
        print("\t\t\t    [3] Sair")
        print("‚îÄ" * 79)

        choice = input("‚ñ∂ Escolha uma op√ß√£o (1/2/3): ")
        
        if choice == '1':
            limpar_tela()
            print("\n" + "‚ïê" * 78)
            print(" NOVO REGISTRO ".center(78, '‚îÄ'))
            print("‚ïê" * 78)
            
            # Valida√ß√£o para o consumo de √°gua
            while True:
                try:
                    agua = float(input("\n‚ñ∫ Consumo de √°gua (litros): "))
                    break
                except ValueError:
                    print("ERRO: Por favor, insira um n√∫mero v√°lido para o consumo de √°gua.")

            # Valida√ß√£o para o consumo de energia
            while True:
                try:
                    energia = float(input("‚ñ∫ Consumo de energia (KWh): "))
                    break
                except ValueError:
                    print("ERRO: Por favor, insira um n√∫mero v√°lido para o consumo de energia.")

            transporte_categorias = {
                'transporte_eco': ["bicicleta", "a p√©", "patinete"],
                'transporte_sustentavel': ["√¥nibus", "metr√¥", "trem"],
                'transporte_baixo': ["bicicleta el√©trica", "patins el√©trico"],
                'transporte_poluente': ["carro", "moto", "caminh√£o"]
            }

            transportes = []
            print("\n" + "‚îÄ" * 78)
            print(" CATEGORIAS DE TRANSPORTE ".center(78, '‚îÄ'))
            print("\tüü¢Meio Ambiente Agradece  üü°Sustent√°vel  üü†Baixo  üî¥Poluente")
            print("‚îÄ" * 78)

            # Loop para registrar transportes
            while True:
                transporte = input("\n‚ñ∫ Transporte utilizado (deixe em branco para sair): ").lower().strip()
                if not transporte:
                    break

                categoria = None
                if transporte in transporte_categorias['transporte_eco']:
                    categoria = "üü¢"
                elif transporte in transporte_categorias['transporte_sustentavel']:
                    categoria = "üü°"
                elif transporte in transporte_categorias['transporte_baixo']:
                    categoria = "üü†"
                elif transporte in transporte_categorias['transporte_poluente']:
                    categoria = "üî¥"
                else:
                    print("‚ñ∫ Categoria n√£o reconhecida! Use transporte listado.")
                    continue

                # Valida√ß√£o para a quantidade de viagens
                while True:
                    try:
                        vezes = float(input(f"‚ñ∫ Quantidade de viagens com {transporte}: "))
                        break
                    except ValueError:
                        print("ERRO: Por favor, insira um n√∫mero v√°lido para a quantidade de viagens.")

                transportes.append((transporte, vezes, categoria))

            # Valida√ß√£o para res√≠duos n√£o recicl√°veis
            while True:
                try:
                    residuos = float(input("\n‚ñ∫ Res√≠duos n√£o recicl√°veis (%): "))
                    break
                except ValueError:
                    print("ERRO: Por favor, insira um n√∫mero v√°lido para os res√≠duos n√£o recicl√°veis.")

            limpar_tela()

            # Classifica√ß√£o dos dados
            classificacoes = {
                "agua": "üü¢ Meio Ambiente Agradece" if agua < 100 else "üü° Alta Sustentabilidade" if agua < 150 else "üü† Moderada Sustentabilidade" if agua < 200 else "üî¥ Baixa Sustentabilidade",
                "energia": "üü¢ Meio Ambiente Agradece" if energia < 2.5 else "üü° Alta Sustentabilidade" if energia < 5 else "üü† Moderada Sustentabilidade" if energia < 10 else "üî¥ Baixa Sustentabilidade",
                "residuos": "üü¢ Meio Ambiente Agradece" if residuos < 20 else "üü° Alta Sustentabilidade" if residuos < 50 else "üü† Moderada Sustentabilidade" if residuos < 60 else "üî¥ Baixa Sustentabilidade"
            }

            # Salvar os dados no arquivo JSON
            salvar_dados_json(usuario_logado, agua, energia, residuos, transportes, classificacoes)
            
            data_hora = datetime.datetime.now().strftime("%d/%m/%Y %H:%M")
            print("\n‚ïî" + "‚ïê" * 78 + "‚ïó")
            print("‚ïë" + " DADOS REGISTRADOS ".center(78, '‚îÄ') + "‚ïë")
            print(f"‚ïë üìÖ Data/hora: {data_hora}".ljust(79) + "‚ïë")
            print(f"‚ïë üåä √Ågua: {agua}L".ljust(79) + "‚ïë")
            print(f"‚ïë üí° Energia: {energia}KWh".ljust(79) + "‚ïë")
            print(f"‚ïë üö¶ Transportes registrados: {len(transportes)}".ljust(79) + "‚ïë")
            print(f"‚ïë ‚ôªÔ∏è Res√≠duos: {residuos}%".ljust(79) + "‚ïë")
            print("‚ïö" + "‚ïê" * 78 + "‚ïù")
            input("\nPressione Enter para continuar...")
        
        elif choice == '2':
            limpar_tela()
            print("\n‚ïî" + "‚ïê" * 78 + "‚ïó")
            print("‚ïë" + " HIST√ìRICO (EM DESENVOLVIMENTO) ".center(78, '~') + "‚ïë")
            print("‚ïö" + "‚ïê" * 78 + "‚ïù")
            input("\nPressione Enter para voltar...")
        
        elif choice == '3':
            limpar_tela()
            print("\n‚ïî" + "‚ïê" * 78 + "‚ïó")
            print("‚ïë" + " OBRIGADO POR UTILIZAR NOSSO SISTEMA! ".center(78) + "‚ïë")
            print("‚ïö" + "‚ïê" * 78 + "‚ïù")
            break
        
        else:
            print("Op√ß√£o inv√°lida! Tente novamente.")
            input("Pressione Enter para continuar...")

if __name__ == "__main__":
    main("Usu√°rio")